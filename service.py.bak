#!/usr/bin/python3

from functions import *
from readchip import *
import time
import Adafruit_CharLCD as LCD
import RPi.GPIO as GPIO

lcd_rs = 20
lcd_en = 21
lcd_d4 = 25
lcd_d5 = 24
lcd_d6 = 23
lcd_d7 = 18

buzzer = 13

slot1 = 26
slot2 = 16
activateSlots = 19

lcd = LCD.Adafruit_CharLCD(lcd_rs, lcd_en, lcd_d4, lcd_d5, lcd_d6, lcd_d7, 16, 2)

GPIO.setup(buzzer, GPIO.OUT)
GPIO.output(buzzer, GPIO.LOW)

for elem in [slot1, slot2]
    GPIO.setup(elem, GPIO.IN, pull_up_down=GPIO.PUD_UP)

GPIO.setup(activateSlots, GPIO.OUT)
GPIO.output(activateSlots, GPIO.LOW)


def errorMessage(string):
    lcd.clear()
    lcd.message(string)
    for i in range(0, 3):
        GPIO.output(buzzer, GPIO.HIGH)
        time.sleep(0.2)
        GPIO.output(buzzer, GPIO.LOW)
        time.sleep(0.2)
    time.sleep(1.8)
    lcd.clear()


try:
    db = DB("root", "sqlraspberrypi")
    print("Access to SQL database granted")
except:
    print("Login to SQL database failed")

used = False
lowCredit = False


def buy(pin):
    if used and not lowCredit:

        global credit
        global uid
        global name
        global remainingTime

        if credit < 1:
            remainingTime = 5
            lcd.clear()
            lcd.message("Zu wenig\nGuthaben")
            GPIO.output(activateSlots, GPIO.LOW)
            time.sleep(5)
            return

        credit = credit - 1

        if credit < 1:
            GPIO.output(activateSlots, GPIO.LOW)

        db.update_credit(uid, credit)
        credit_str = str(credit)
        lcd.clear()
        lcd.message(name + "\n" + credit_str)

    elif used and lowCredit:
        lcd.clear()
        lcd.message("Zu wenig\nGuthaben")

    else:
        lcd.clear()
        lcd.message("1.00")
        t = 5
        while t > 0:
            t -= 1
            if used:
                return
            time.sleep(1)
        lcd.clear()


GPIO.add_event_detect(slot1, GPIO.FALLING, callback=buy, bouncetime=200)

try:
    while True:
        uid = getUID()

        print("Found UID: " + uid)

        data = db.getData(uid)
        if data == None:
            print("Invalid UID found")
            errorMessage("Ung\xF5ltiger\nChip")
#            lcd.clear()
#            lcd.message("Ung\xF5ltiger\nChip")
#            for i in range(0, 3):
#                GPIO.output(buzzer, GPIO.HIGH)
#                time.sleep(0.2)
#                GPIO.output(buzzer, GPIO.LOW)
#                time.sleep(0.2)
#            time.sleep(1.8)
#            lcd.clear()
            continue

        used = True

        GPIO.output(buzzer, GPIO.HIGH)
        time.sleep(0.2)
        GPIO.output(buzzer, GPIO.LOW)

        name = data[1]
        credit = data[2]

        if credit < 1:
            lowCredit = True
        else:
            lowCredit = False

        credit_str = str(data[2])
        lcd.clear()
        lcd.message(name + "\n" + credit_str)

        if not lowCredit:
            GPIO.output(activateSlots, GPIO.HIGH)

        remainingTime = 10
        while remainingTime > 0:
            remainingTime -= 1
            time.sleep(1)

        lcd.clear()
        GPIO.output(activateSlots, GPIO.LOW)
        used = False
except:
    db.close_db()
    GPIO.cleanup()
    #traceback.print_exception()
    print("Service stopped")
    sys.exit()
